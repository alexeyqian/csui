<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>@ViewData["Title"] - CustomerService</title>
    <link rel="stylesheet" href="~/lib/bootstrap/dist/css/bootstrap.min.css" />
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap-icons@1.3.0/font/bootstrap-icons.css">
    <link rel="stylesheet" href="~/css/site.css" />
</head>
<body>
    <style>
        .highchart-question-container {
            box-shadow: rgba(0, 0, 0, 0.1) 0.3px 0.9px, rgba(0, 0, 0, 0.13) 0px 1.6px 3.6px;
            background-color: rgb(255, 255, 255);
            margin: 2rem 0px;
        }

        .highchart-question-title {
            display: flex;
            align-content: flex-end;
            flex-direction: column-reverse;
            font-family: "Segoe UI";
            font-size: 14px;
            line-height: 20px;
            padding-left: 16px;
            padding-top: 10px;
            padding-bottom: 10px;
            font-weight: 600;
            color: rgb(50, 49, 48);
            border-bottom: 1px solid rgb(237, 235, 233);
        }

        .highchart-main-section {
            display: flex;
            flex-direction: column;
            align-items: center;
            justify-content: center;
            /*padding: 6rem 0px; // TODO: REMOVE */
            margin: 16px 0px; /*TODO: Added*/
        }

        .highchart-right-part {
            font-family: "Segoe UI";
            font-size: 0.9em;
            max-height: 465px;
            overflow-y: auto;
            min-width: 480px;
            margin: auto 0px;
        }

        .text-response-component {
            font-family: Segoe UI;
            color: #323130;
        }

        .text-response-header {
            font-size: 14px;
            line-height: 20px;
            font-weight: bold;
            margin-bottom: 13px;
        }

        .text-response-footer {
            margin-bottom: 13px;
        }

        .text-response-list {
            list-style-type: none;
            padding: 0px;
        }

            .text-response-list li:first-of-type {
                border-top: solid 1px #EDEBE9;
            }

            .text-response-list li {
                border-bottom: solid 1px #EDEBE9;
            }



        .text-response-list-item-text {
            margin: 13px;
            margin-bottom: 0px;
        }

        .text-response-list-item-time {
            margin-bottom: 13px;
            margin-left: 13px;
            color: #8A8886;
        }

        .choice-chart-category-label {
            white-space: nowrap;
            overflow: hidden;
            text-overflow: ellipsis;
            width: 100px;
            text-align: right;
        }
    </style>
    <header>
        <nav class="navbar navbar-expand-sm navbar-toggleable-sm border-bottom box-shadow mb-3">
            <div class="container">
                <i class="bi bi-bar-chart-fill"></i>
                <a class="navbar-brand" asp-area="" asp-controller="Home" asp-action="Index">Customer Voice</a>
                <button class="navbar-toggler" type="button" data-toggle="collapse" data-target=".navbar-collapse" aria-controls="navbarSupportedContent"
                        aria-expanded="false" aria-label="Toggle navigation">
                    <span class="navbar-toggler-icon"></span>
                </button>
                <div class="navbar-collapse collapse d-sm-inline-flex flex-sm-row-reverse">
                    <ul class="navbar-nav flex-grow-1">
                        <li class="nav-item">
                            <a class="nav-link text-dark" asp-area="" asp-controller="Home" asp-action="Index">Home</a>
                        </li>
                        <li class="nav-item">
                            <a class="nav-link text-dark" asp-area="" asp-controller="Home" asp-action="Choice">Choice</a>
                        </li>
                        <li class="nav-item">
                            <a class="nav-link text-dark" asp-area="" asp-controller="Home" asp-action="Rating">Rating</a>
                        </li>
                        <li class="nav-item">
                            <a class="nav-link text-dark" asp-area="" asp-controller="Home" asp-action="NPS">NPS</a>
                        </li>
                        <li class="nav-item">
                            <a class="nav-link text-dark" asp-area="" asp-controller="Home" asp-action="ScaleChoices">Scale Choices</a>
                        </li>
                        <li class="nav-item">
                            <a class="nav-link text-dark" asp-area="" asp-controller="Home" asp-action="Privacy">Privacy</a>
                        </li>
                    </ul>
                </div>
            </div>
        </nav>
    </header>
    <div class="container">
        <main role="main" class="pb-3">
            @RenderBody()
        </main>
    </div>

    <footer class="border-top footer text-muted">
        <div class="container">
            &copy; 2021 - CustomerService - <a asp-area="" asp-controller="Home" asp-action="Privacy">Privacy</a>
        </div>
    </footer>
    <script src="~/lib/jquery/dist/jquery.min.js"></script>
    <script src="~/lib/bootstrap/dist/js/bootstrap.bundle.min.js"></script>
    <script src="https://code.highcharts.com/highcharts.js"></script>
    <script src="https://code.highcharts.com/highcharts-more.js"></script>

    <script src="https://code.highcharts.com/stock/modules/accessibility.js"></script>
    <script src="~/js/site.js" asp-append-version="true"></script>
    <script>

        var barObj = {};
        var columnObj = {};
        var gaugeArcObj = {};
        var gaugeBarObj = {};

        function createChoiceChart(obj) {

            // Dynamic height logic
            // Below code is to set bar height and chart height dynamiclly
            // The reason not to use built-in minPointHeight is that chart.height, bar height scale
            // and chart.series.minPointHeight cannot take effect together.
            const chartMaxHeight = 465;
            const barMinHeight = 8;
            const barMaxHeight = 40;
            const barNumberThreshold = 30;

            function getChartHeight() {
                let ratio = 1.5;

                if (obj.categories.length <= 5)
                    ratio = 2;

                let height = obj.categories.length * barMaxHeight * ratio;
                if (height > chartMaxHeight && obj.categories.length <= barNumberThreshold) height = chartMaxHeight;
                if (height > chartMaxHeight && obj.categories.length > barNumberThreshold) height = obj.categories.length * barMinHeight * ratio;

                return height;
            }

            function getBarHeight() {
                if (obj.categories.length <= 5) return barMaxHeight;
                if (obj.categories.length >= barNumberThreshold) return barMinHeight;

                let height = barMaxHeight - obj.categories.length * 2;
                if (height <= barMinHeight) height = barMinHeight;

                return height;
            }

            // End of Dynamic height logic

            Highcharts.chart(obj.container, {
                chart: {
                    type: 'bar',
                    height: getChartHeight(),
                },

                title: {
                    text: ''
                },

                legend: {
                    enabled: false,
                },

                xAxis: {
                    categories: obj.categories,
                    labels: {
                        useHTML: true,
                        format: '<div class="choice-chart-category-label">{value}</div>'
                    },
                    lineWidth: 0,
                    style: {
                        textOverflow: 'ellipsis',
                    },
                },

                yAxis: {
                    min: 0,
                    max: 100,
                    title: {
                        enabled: false,
                    },
                    labels: {
                        format: '{value}%',

                    },
                    gridLineDashStyle: 'ShortDash',

                },

                series: [{
                    name: 'null',
                    data: obj.dataForBackground,
                    color: '#F2F3F5',
                    enableMouseTracking: false
                }, {
                    data: obj.data,
                    color: '#7084E3',
                }],

                tooltip: {
                    followPointer: false,
                    backgroundColor: "#00000",
                    borderWidth: 0,
                    style: {
                        "fontFamily": "Segoe UI",
                        "fontWeight": 400,
                        "color": "#eee",
                        "direction": "ltr",
                    },
                    formatter: function () {
                        return '<div>' + this.x + ', <span>' + this.y + '%</span></div><br/><div>18 responses</div>';
                    }
                },

                plotOptions: {
                    series: {
                        pointWidth: getBarHeight(),// obj.categories.length > barNumberThreshold ? barMinHeight : this.value,
                        //pointPadding: 0,
                        //groupPadding: 0.1,

                        /*
                        maxPointWidth: 41,
                        minPointWidth: 8,
                        pointWidth: pointWidth,
                       */
                    },

                    bar: {
                        stacking: 'normal',
                    },
                },

                credits: {
                    enabled: false
                },
                scrollbar: {
                    enabled: true
                }
            });
        }

        function createRatingChart(obj) {
            Highcharts.chart(obj.container, {
                chart: {
                    type: 'column',
                    width: 411, // gap is 23, a littler bigger that 20
                    height: 379
                },

                title: {
                    text: ''
                },

                legend: {
                    enabled: false,
                },

                xAxis: {
                    categories: obj.categories,
                    labels: {
                        autoRotation: false, // IMPORTANT
                        align: 'center',
                    },
                    lineWidth: 0,
                },

                yAxis: {
                    min: 0,
                    max: 100,
                    title: {
                        enabled: false,
                    },
                    labels: {
                        format: '{value}%',
                    },
                    gridLineDashStyle: 'ShortDash',
                },

                series: [{
                    name: 'null',
                    data: obj.dataForBackground,
                    color: '#F2F3F5',
                    enableMouseTracking: false
                }, {
                    data: obj.data,
                    color: '#7084E3',
                }],

                tooltip: {
                    followPointer: false,
                    backgroundColor: "#212121",
                    borderWidth: 0,
                    style: {
                        "fontFamily": "Segoe UI",
                        "fontWeight": 400,
                        "color": "#eee",
                        "direction": "ltr",
                    },
                    formatter: function () {
                        return '<div>' + this.x + ', <span>' + this.y + '%</span></div><br/><div>18 responses</div>';
                    }
                },

                plotOptions: {
                    series: {
                        states: {
                            inactive: {
                                opacity: 1
                            }
                        },
                        pointWidth: 47,
                    },
                    column: {
                        stacking: 'normal',
                        dataLabels: {
                            enabled: false
                        },

                    },
                    followPointer: false,
                    backgroundColor: "#00000",
                    borderWidth: 0
                },
                credits: {
                    enabled: false
                }
            });
        }

        function createGaugeArc(obj) {
            let color = obj.y >= 0 ? '#107C10' : '#BA141A';

            Highcharts.chart(obj.container, {
                chart: {
                    type: 'gauge',
                    title: {
                        text: ''
                    },
                    plotBackgroundImage: null,
                    height: 400,
                    width: 400
                },
                title: {
                    text: ''
                },
                pane: [{
                    startAngle: -90,
                    endAngle: 90,
                    background: null,
                    //center: ['50%', '100%'],
                    //size: 300
                }],

                yAxis: [{
                    min: -100,
                    max: 100,
                    minorTickLength: 0,
                    tickLength: 0,
                    tickWidth: 0,
                    labels: {
                        enabled: true,
                        y: 20,
                        formatter: function () {
                            if (this.isLast || this.isFirst) {
                                return this.value
                            }
                        }
                    },
                    title: {
                        text: '<div class="gaugeFooter" style="text-align: center;"><h3>' + obj.y + '</h3><div>Avg NPS score</div></div>',
                        useHTML: true,
                        y: 70 // offset of the text
                    },
                    plotBands: [{
                        from: -100,
                        to: obj.y,
                        color: color,
                        innerRadius: '100%',
                        outerRadius: '50%'
                    }, {
                        from: obj.y,
                        to: 100,
                        color: '#F2F3F5',
                        innerRadius: '100%',
                        outerRadius: '50%'
                    }],
                    pane: 0,

                }],

                tooltip: {
                    followPointer: false,
                    backgroundColor: "#00000",
                    borderWidth: 0,
                    style: {
                        "fontFamily": "Segoe UI",
                        "fontWeight": 400,
                        "color": "#eee",
                        "direction": "ltr",
                    },
                    formatter: function () {
                        return '<div>Score - <span>' + this.y + '</span></div><br/><div>18 responses</div>';
                    }
                },

                plotOptions: {
                    gauge: {
                        dataLabels: {
                            enabled: false
                        },
                        dial: { // needle
                            radius: '100%',
                            backgroundColor: 'black',
                            borderColor: 'black',
                            borderWidth: 1,
                            baseWidth: 1,
                            topWidth: 1,
                            baseLength: '0%', // of radius
                            rearLength: '0%',
                        }
                    }
                },
                series: [{
                    data: [obj.y],
                    yAxis: 0,
                    lables: {
                        enabled: false
                    }
                }],
                credits: {
                    enabled: false
                }

            });
        }

        function createGaugeBar(obj) {
            Highcharts.chart(obj.container, {
                chart: {
                    type: 'bar',
                    height: 200
                },
                title: {
                    text: 'Overal NPS results',
                    align: 'left'
                },
                xAxis: {
                    categories: ['NPS'],
                    labels: {
                        enabled: false
                    },
                    gridLineWidth: 0,
                    visible: false,
                },
                yAxis: {
                    min: 0,
                    max: 100,
                    labels: {
                        enabled: false
                    },
                    gridLineWidth: 0,
                    visible: false,
                    reversed: true,
                },
                tooltip: {
                    followPointer: false,
                    backgroundColor: "#00000",
                    borderWidth: 0,
                    style: {
                        "fontFamily": "Segoe UI",
                        "fontWeight": 400,
                        "color": "#eee",
                        "direction": "ltr",
                    },
                    formatter: function () {
                        return '<div>' + this.x + ' <span>' + this.y + '%</span></div><br/><div>18 responses</div>';
                    }
                },
                legend: {
                    symbolHeight: 12,
                    symbolWidth: 12,
                    symbolRadius: 0
                },
                plotOptions: {
                    series: {
                        stacking: 'normal'
                    },
                    bar: {
                        dataLabels: {
                            enabled: true,
                            format: '{y} %',
                            style: {
                                fontWeight: 'bold'
                            }
                        },
                    }
                },

                series: [{
                    name: 'Detractors(0-6)',
                    data: [obj.data[2]],
                    color: "#D13438",
                },
                {
                    name: 'Passives(7-8)',
                    data: [obj.data[1]],
                    color: "#EF5F20",
                }, {
                    name: 'Promoters(9-10)',
                    data: [obj.data[0]],
                    color: "#107C10"
                },
                ], credits: {
                    enabled: false
                }
            });

        }

        function createLikertChart(obj) {
            // TODO: move to constants file
            // Below code is to set bar height and chart height dynamiclly
            // The reason not to use built-in minPointHeight is that chart.height, bar height scale
            // and chart.series.minPointHeight cannot take effect together.
            const barMinHeight = 8;
            const barMaxHeight = 40;
            const chartMaxHeight = 400;
            const barNumberThreshold = 15;

            // if categories under threshold, the chart height and bar height will be dynamically scale up and down.
            // after threshold, we set the bar height to min height, and chart height accordingly.

            var height = 0;
            if (obj.categories.length > barNumberThreshold) {
                barPlotOptions.series.pointWidth = barMinHeight;
                height = obj.categories.length * barMinHeight * 2;
            } else {
                height = obj.categories.length * barMaxHeight * 2;
                height = height >= chartMaxHeight ? chartMaxHeight : height;
            }

            Highcharts.chart(obj.container, {
                chart: {
                    type: 'bar',
                    height: height,
                },

                title: {
                    text: ''
                },

                legend: {
                    enabled: true,
                    reversed: true,
                    align: 'center',
                    verticalAlign: 'top'
                },

                xAxis: {
                    categories: obj.categories,
                    labels: {
                        align: 'right',
                    },
                    lineWidth: 0,
                },

                yAxis: {
                    min: 0,
                    max: 100,
                    title: {
                        enabled: false,
                    },
                    labels: {
                        format: '{value}%',

                    },
                    gridLineDashStyle: 'ShortDash',

                },

                series: [{
                    name: 'Very easy to complete',
                    data: obj.data3,
                    color: '#80AFED'
                }, {
                    name: 'Neutral',
                    data: obj.data2,
                    color: '#4668C5',
                }, {
                    name: 'Unable to complete',
                    data: obj.data,
                    color: '#002050',
                }],

                tooltip: barTooltip,
                plotOptions: barPlotOptions,
                credits: {
                    enabled: false
                },
                scrollbar: {
                    enabled: true
                }
            });
        }
    </script>
    @RenderSection("Scripts", required: false)
</body>
</html>
